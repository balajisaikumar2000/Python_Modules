
import mysql.connector                  #To access the MySQL database from Python, you need a database driver. MySQL Connector/Python is a standardized database driver provided by MySQL             

#establishing the connection
conn = mysql.connector.connect(
	user='root',
	 password='balajisaikumar', 
	 host='localhost',
	 database='MYDATABASE')

#Creating a mycursor object using the mycursor() method
# The MySQLmyCursor of mysql-connector-python (and similar libraries) is used to execute statements to communicate with the MySQL database.
# Using the methods of it you can execute SQL statements, fetch data from the result sets, call procedures.

mycursor = conn.mycursor()

#Doping database MYDATABASE if already exists.
mycursor.execute("DROP database IF EXISTS MyDatabase")

#Preparing query to create a database
sql = "CREATE database MYDATABASE";

#Creating a database
mycursor.execute(sql)

#Retrieving the list of databases
print("List of databases: ")
mycursor.execute("SHOW DATABASES")
print(my
cursor.fetchall())

Dropping EMPLOYEE table if already exists.
mycursor.execute("DROP TABLE IF EXISTS EMPLOYEE")

#Creating table as per requirement
sql ='''CREATE TABLE EMPLOYEE(
   FIRST_NAME CHAR(20) NOT NULL,
   LAST_NAME CHAR(20),
   AGE INT,
   SEX CHAR(1),
   INCOME FLOAT
)'''
mycursor.execute(sql)


Preparing SQL query to INSERT a record into the database.
sql = """INSERT INTO EMPLOYEE(
   FIRST_NAME, LAST_NAME, AGE, SEX, INCOME)
   VALUES ('Mac', 'Mohan', 20, 'M', 2000)"""
   Executing the SQL command
mycursor.execute(sql)

   Commit your changes in the database
conn.commit()

insert_stmt = (
   "INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, AGE, SEX, INCOME)"
   "VALUES (%s, %s, %s, %s, %s)"
)
data = ('Ramya', 'Ramapriya', 25, 'F', 5000)

   # Executing the SQL command
mycursor.execute(insert_stmt, data)
   
   # Commit your changes in the database
conn.commit()


Retrieving single row
sql = '''SELECT * from EMPLOYEE'''

#Executing the query
mycursor.execute(sql)

Fetching 1st row from the table
result = mycursor.fetchone();
print(result)

#Fetching 1st row from the table
sql = '''SELECT * from EMPLOYEE'''

#Executing the query
mycursor.execute(sql)
result = mycursor.fetchall();
print(result)

Populating the table
insert_stmt = "INSERT INTO EMPLOYEE (FIRST_NAME, LAST_NAME, AGE, SEX, INCOME)  VALUES (%s, %s, %s, %s, %s)"

data = [('Krishna', 'Sharma', 19, 'M', 2000), ('Raj', 'Kandukuri', 20, 'M', 7000),
('Ramya', 'Ramapriya', 25, 'F', 5000),('Mac', 'Mohan', 26, 'M', 2000)]
mycursor.executemany(insert_stmt, data)
conn.commit()


mycursor.execute("select * from employee")

#will return all rows
print(my
cursor.fetchall())

Populating the table
insert_stmt = "INSERT INTO EMPLOYEE (FIRST_NAME, LAST_NAME, AGE, SEX, INCOME) VALUES (%s, %s, %s, %s, %s)"

data = [('Krishna', 'Sharma', 26, 'M', 2000), 
   ('Raj', 'Kandukuri', 20, 'M', 7000),
   ('Ramya', 'Ramapriya', 29, 'F', 5000),
   ('Mac', 'Mohan', 26, 'M', 2000)]
mycursor.executemany(insert_stmt, data)
conn.commit()

ursor.execute("SELECT * from EMPLOYEE ORDER BY AGE")
print(my
cursor.fetchall())


Preparing the query to update the records
sql = '''UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = 'M' '''

mycursor.execute(sql)
   
   # Commit your changes in the database
conn.commit()


mycursor.execute('''CREATE TABLE CONTACT(
   ID INT NOT NULL,
   EMAIL CHAR(20) NOT NULL,
   PHONE LONG,
   CITY CHAR(20)
)''')

mycursor.execute('''INSERT INTO CONTACT (ID, EMAIL, CITY) VALUES 
   (101, 'Krishna@mymail.com', 'Hyderabad'), 
   (102, 'Raja@mymail.com', 'Vishakhapatnam'), 
   (103, 'Krishna@mymail.com', 'Pune'),
   (104, 'Raja@mymail.com', 'Mumbai')''')

Retrieving single row
sql = '''SELECT * from EMPLOYEE INNER JOIN CONTACT ON EMPLOYEE.CONTACT = CONTACT.ID'''

Executing the query
mycursor.execute(sql)

Fetching 1st row from the table
result = mycursor.fetchall();
print(result)

#    (104, 'Raja@mymail.com', 'Mumbai')''')


# # mycursor object methods():-

# 1) callproc()
# This method is used to call existing procedures MySQL database.

# 2)close()
# This method is used to close the current mycursor object.

# 3)Info()
# This method gives information about the last query.

# 4)executemany()
# This method accepts a list series of parameters list. Prepares an MySQL query and executes it with all the parameters.

# 5)execute()
# This method accepts a MySQL query as a parameter and executes the given query.
	
# 6)fetchone()
# This method fetches the next row in the result of a query and returns it as a tuple.

# 7)fetchmany()
# This method is similar to the fetchone() but, it retrieves the next set of rows in the result set of a query, instead of a single row.

# 8)etchwarnings()
# This method returns the warnings generated by the last executed query.


















